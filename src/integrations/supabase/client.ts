// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;

// Validação de variáveis de ambiente em desenvolvimento
if (import.meta.env.DEV) {
  if (!SUPABASE_URL) {
    console.error('❌ VITE_SUPABASE_URL não configurada');
  }
  if (!SUPABASE_PUBLISHABLE_KEY) {
    console.error('❌ VITE_SUPABASE_PUBLISHABLE_KEY não configurada');
  }
}

// Não usar fallbacks hardcoded em produção
const url = SUPABASE_URL;
const key = SUPABASE_PUBLISHABLE_KEY;

if (!url || !key) {
  throw new Error('Configuração do Supabase não encontrada. Configure as variáveis de ambiente.');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(url, key, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: false,
    // Configurações para lidar com third-party cookies bloqueados
    storageKey: 'supabase.auth.token',
    flowType: 'pkce',
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
  global: {
    headers: {
      'X-Client-Info': 'comps-plus-54',
    },
  },
});

// Teste de conexão apenas em desenvolvimento
if (import.meta.env.DEV) {
  supabase.auth.getSession().then(({ error }) => {
    if (error) {
      console.error('❌ Erro na conexão Supabase:', error.message);
    }
  }).catch(() => {
    // Silenciar erros em produção
  });
}