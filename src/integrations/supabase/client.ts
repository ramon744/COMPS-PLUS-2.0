// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_PUBLISHABLE_KEY;

// Valida√ß√£o robusta de vari√°veis de ambiente
console.log('üîç Verificando vari√°veis de ambiente Supabase...');
console.log('VITE_SUPABASE_URL:', SUPABASE_URL ? '‚úÖ Configurada' : '‚ùå N√£o configurada');
console.log('VITE_SUPABASE_PUBLISHABLE_KEY:', SUPABASE_PUBLISHABLE_KEY ? '‚úÖ Configurada' : '‚ùå N√£o configurada');

if (!SUPABASE_URL) {
  console.error('‚ùå VITE_SUPABASE_URL n√£o configurada');
  throw new Error('VITE_SUPABASE_URL √© obrigat√≥ria');
}

if (!SUPABASE_PUBLISHABLE_KEY) {
  console.error('‚ùå VITE_SUPABASE_PUBLISHABLE_KEY n√£o configurada');
  throw new Error('VITE_SUPABASE_PUBLISHABLE_KEY √© obrigat√≥ria');
}

// Validar formato das vari√°veis
if (!SUPABASE_URL.startsWith('https://')) {
  throw new Error('VITE_SUPABASE_URL deve come√ßar com https://');
}

if (!SUPABASE_PUBLISHABLE_KEY.startsWith('eyJ')) {
  throw new Error('VITE_SUPABASE_PUBLISHABLE_KEY deve ser um JWT v√°lido');
}

const url = SUPABASE_URL;
const key = SUPABASE_PUBLISHABLE_KEY;

console.log('‚úÖ Vari√°veis de ambiente validadas com sucesso');

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(url, key, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: false,
    // Configura√ß√µes para lidar com third-party cookies bloqueados
    storageKey: 'supabase.auth.token',
    flowType: 'pkce',
  },
  realtime: {
    params: {
      eventsPerSecond: 10,
    },
  },
  global: {
    headers: {
      'X-Client-Info': 'comps-plus-54',
    },
  },
});

// Teste de conex√£o em todos os ambientes
console.log('üîó Testando conex√£o com Supabase...');
supabase.auth.getSession().then(({ data, error }) => {
  if (error) {
    console.error('‚ùå Erro na conex√£o Supabase:', error.message);
    console.error('‚ùå Detalhes do erro:', error);
  } else {
    console.log('‚úÖ Conex√£o com Supabase estabelecida');
    console.log('üìä Sess√£o:', data.session ? 'Ativa' : 'N√£o ativa');
  }
}).catch((error) => {
  console.error('‚ùå Erro cr√≠tico na conex√£o Supabase:', error);
});